name: __os__
on:
  workflow_call:
    inputs:
      BOARD:
        required: true
        type: string
      PLATFORM:
        required: true
        type: string
      SUFFIX:
        required: false
        type: string
        default:
      OLED:
        required: false
        type: string
        default:
      FAN:
        required: false
        type: string
        default:
    secrets:
      DEPLOY_KEY:
        required: true


jobs:
  os:
    runs-on: ubuntu-latest
    env:
      DEPLOY_KEY: "${{secrets.DEPLOY_KEY}}"
      BOARD: "${{inputs.BOARD}}"
      PLATFORM: "${{inputs.PLATFORM}}"
      SUFFIX: "${{inputs.SUFFIX}}"
      OLED: "${{inputs.OLED}}"
      FAN: "${{inputs.FAN}}"
      TERM: xterm
    steps:
      - name: Checkout
        uses: actions/checkout@v2


      - name: Creating config.mk
        run: |
          echo "BOARD=$BOARD" > config.mk
          echo "PLATFORM=$PLATFORM" >> config.mk
          echo "DEPLOY_USER=data" >> config.mk
          echo "SUFFIX=$SUFFIX" >> config.mk
          echo "OLED=$OLED" >> config.mk
          echo "FAN=$FAN" >> config.mk
          
          echo "firmware name:" ${{inputs.PLATFORM}}-${{inputs.BOARD}}-latest.img.xz
          echo "firmware path:" /home/runner/work/pikvm-os/pikvm-os/.pi-builder/${{inputs.PLATFORM}}-${{inputs.BOARD}}

      - name: Building OS
        run: make os NC=1

      - name: Making image
        run: make image IMAGE_XZ=1

      - name: Upload firmware directory
        uses: actions/upload-artifact@main
        if: steps.organize.outputs.status == 'success' && !cancelled()
        with:
          name: ${{inputs.PLATFORM}}-${{inputs.BOARD}}-latest.img.xz
          path: /home/runner/work/pikvm-os/pikvm-os/.pi-builder/${{inputs.PLATFORM}}-${{inputs.BOARD}}
